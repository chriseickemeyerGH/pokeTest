{"version":3,"sources":["img/ditto.png","img/tyranitar.png","img/registeel.png","img/magmortar.png","img/thundurus.png","img/sylveon.png","img/blacephalon.png","img/pikachu.png","Components/GenLinks.js","Components/Box.js","Views/Home.js","Components/RecordBox.js","Components/Timer.js","Components/Spinner.js","Components/Button.js","Components/DisplayAnswer.js","Components/TextInput.js","Components/AnswerTextBox.js","Components/AnswerForm.js","Components/ModeForm.js","Components/HeightAndWeight.js","Components/Type.js","Components/MovesList.js","Components/ArrowIcon.js","Components/MovesHeader.js","Components/Stats.js","Components/Characteristics.js","Views/PokeView.js","Views/Router.js","index.js"],"names":["module","exports","__webpack_require__","p","GenLinks","to","name","game","title","image","ditto","tyranitar","registeel","magmortar","thundurus","sylveon","blacephalon","pikachu","DIV","styled","div","_templateObject","props","bgColor","borderRadius","justifyContent","setDisplay","setWidth","setHeight","setMargin","setPadding","flexFlow","alignItems","maxWidth","minWidth","minHeight","maxHeight","textAlign","lineHeight","setOverflow","Box","_ref","Object","esm_extends","react_default","a","createElement","StyledLink","Link","Home_templateObject","PokeIMG","img","_templateObject2","H1","h1","_templateObject3","Home","Fragment","Helmet","content","Components_Box","href","map","link","key","src","alt","BoxRecord","RecordBox_templateObject","RecordBox","correctAnswers","totalQuestions","setBorder","isNaN","toFixed","TimerSpan","span","Timer_templateObject","txtColor","Timer","count","Spin","keyframes","Spinner_templateObject","Loader","Spinner_templateObject2","Spinner","ButtonStyles","button","Button_templateObject","Button","IMG","DisplayAnswer_templateObject","DisplayAnswer","answerResult","onRestart","showAnswer","concat","Components_Button","onClick","OO","input","TextInput_templateObject","TextInput","AnswerInput","AnswerTextBox_templateObject","startAnimation","css","AnswerTextBox_templateObject2","shake","AnswerTextBox_templateObject3","AnswerTextBox","Label","label","AnswerForm_templateObject","AnswerForm","onSubmit","answerVal","onChange","Components_AnswerTextBox","value","disabled","OL","ol","ModeForm_templateObject","P","ModeForm_templateObject2","ModeForm","normalClick","hardClick","normalMode","hardMode","onStartGame","HeightAndWeight","heightFt","heightIn","heightM","weightLb","weightKg","Type","typeArray","item","type","toUpperCase","MovesList","toggleMoveBox","moves","move","Icon","FontAwesomeIcon","ArrowIcon_templateObject","settransform","ArrowIcon","icon","MovesHeader","onArrowClick","length","Components_ArrowIcon","Stats","stats","stat","base_stat","DataCard","Characteristics_templateObject","Characteristics","Components_HeightAndWeight","Components_Type","Components_MovesHeader","Components_MovesList","Components_Stats","PokeView","match","_useState","useState","_useState2","slicedToArray","formText","setFormText","_useState3","_useState4","wrongInput","setWrongInput","_useState5","_useState6","rightOrWrong","setRightOrWrong","_useState7","_useState8","spinner","setSpinner","_useState9","normal","hard","_useState10","mode","setMode","_useState11","_useState12","setToggleMoveBox","_useState13","_useState14","gameState","setGameState","_useState15","_useState16","isTicking","setTicking","_useState17","_useState18","setCount","_useState19","_useState20","attrs","setAttrs","_useState21","start","end","_useState22","pokeId","setPokeId","_useState23","parseInt","localStorage","getItem","_useState24","setCorrectAnswers","_useState25","_useState26","setTotalQuestions","useEffect","window","scrollTo","interval","setInterval","timeout","setTimeout","axios","get","then","res","objectSpread","data","serverName","serverImage","clearTimeout","clearInterval","setItem","modify","params","id","slice","startGame","e","preventDefault","post","startingId","endingId","response","serverInHeight","serverMeterHeight","serverKgWeight","serverLbWeight","serverFtHeight","serverType","serverStats","serverMoves","catch","err","console","log","guess","serverState","Components_ModeForm","Components_Characteristics","Components_AnswerForm","target","Components_Timer","Components_RecordBox","Components_DisplayAnswer","Components_Spinner","library","add","faArrowCircleDown","Globals","createGlobalStyle","Router_templateObject","SVG","svg","Router_templateObject2","Root","react_router_dom","viewBox","fill","d","react_router","exact","path","component","rootElement","document","getElementById","ReactDOM","render","Router"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oTCS3BC,EAAW,CACtB,CACEC,GAAI,cACJC,KAAM,QACNC,KAAM,oBACNC,MAAO,QACPC,MAAOC,KAET,CACEL,GAAI,gBACJC,KAAM,QACNC,KAAM,wBACNC,MAAO,QACPC,MAAOE,KAET,CACEN,GAAI,gBACJC,KAAM,QACNC,KAAM,0BACNC,MAAO,QACPC,MAAOG,KAET,CACEP,GAAI,gBACJC,KAAM,QACNC,KAAM,kBACNC,MAAO,SACPC,MAAOI,KAET,CACER,GAAI,gBACJC,KAAM,QACNC,KAAM,gBACNC,MAAO,QACPC,MAAOK,KAET,CACET,GAAI,gBACJC,KAAM,QACNC,KAAM,QACNC,MAAO,QACPC,MAAOM,KAET,CACEV,GAAI,gBACJC,KAAM,QACNC,KAAM,aACNC,MAAO,QACPC,MAAOO,KAET,CACEX,GAAI,cACJC,KAAM,0BACNE,MAAO,QACPC,MAAOQ,mcC5DX,IAAMC,EAAMC,IAAOC,IAAVC,IACa,SAAAC,GAAK,OAAIA,EAAMC,SAClB,SAAAD,GAAK,OAAIA,EAAME,cACb,SAAAF,GAAK,OAAIA,EAAMG,gBACvB,SAAAH,GAAK,OAAIA,EAAMI,YACjB,SAAAJ,GAAK,OAAIA,EAAMK,UACd,SAAAL,GAAK,OAAIA,EAAMM,WACf,SAAAN,GAAK,OAAIA,EAAMO,WACd,SAAAP,GAAK,OAAIA,EAAMQ,YACb,SAAAR,GAAK,OAAIA,EAAMS,UACb,SAAAT,GAAK,OAAIA,EAAMU,YACjB,SAAAV,GAAK,OAAIA,EAAMW,UACf,SAAAX,GAAK,OAAIA,EAAMY,UACd,SAAAZ,GAAK,OAAIA,EAAMa,WACf,SAAAb,GAAK,OAAIA,EAAMc,WACf,SAAAd,GAAK,OAAIA,EAAMe,WACd,SAAAf,GAAK,OAAIA,EAAMgB,YAClB,SAAAhB,GAAK,OAAIA,EAAMiB,cAKdC,EADH,SAAAC,GAAA,IAAMnB,EAANoB,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAAA,OAAkBG,EAAAC,EAAAC,cAAC5B,EAAQI,27BCjBvC,IAAMyB,EAAa5B,YAAO6B,IAAP7B,CAAH8B,KA2BVC,EAAU/B,IAAOgC,IAAVC,KAIPC,EAAKlC,IAAOmC,GAAVC,KAkDOC,MA9Cf,WACE,OACEZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAACY,EAAA,OAAD,KACEd,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,QACExC,KAAK,cACLqD,QAAQ,oFAIZf,EAAAC,EAAAC,cAACc,EAAD,CAAKlC,WAAW,OAAOK,SAAS,SAASC,WAAW,UAClDY,EAAAC,EAAAC,cAACc,EAAD,CACErC,QAAQ,qBACRC,aAAa,OACbS,SAAS,QACTH,WAAW,QAEXc,EAAAC,EAAAC,cAACO,EAAD,kBACYT,EAAAC,EAAAC,cAAA,+BADZ,eAGAF,EAAAC,EAAAC,cAAA,2FAEc,IACZF,EAAAC,EAAAC,cAAA,KAAGe,KAAK,+CAAR,QAHF,iPAWJjB,EAAAC,EAAAC,cAACc,EAAD,CAAKlC,WAAW,OAAOK,SAAS,WAAWN,eAAe,UACvDrB,EAAS0D,IAAI,SAAAC,GAAI,OAChBnB,EAAAC,EAAAC,cAACC,EAAD,CAAYiB,IAAKD,EAAKzD,KAAMD,GAAI0D,EAAK1D,IACnCuC,EAAAC,EAAAC,cAAA,SAAIiB,EAAKzD,MACTsC,EAAAC,EAAAC,cAAA,SAAIiB,EAAKxD,MACTqC,EAAAC,EAAAC,cAAA,SAAIiB,EAAKvD,MAAT,WACAoC,EAAAC,EAAAC,cAACI,EAAD,CAASe,IAAKF,EAAKtD,MAAOyD,IAAI,+NC5E1C,IAAMC,EAAYhD,YAAOqB,EAAPrB,CAAHiD,KA+BAC,EAvBG,SAAA5B,GAAA,IAAG6B,EAAH7B,EAAG6B,eAAgBC,EAAnB9B,EAAmB8B,eAAnB,OAChB3B,EAAAC,EAAAC,cAACqB,EAAD,CAAWzC,WAAW,QACpBkB,EAAAC,EAAAC,cAACc,EAAD,CACEjC,SAAS,QACTU,UAAU,SACVC,WAAW,OACXkC,UAAU,2BACV1C,WAAW,mBACXP,QAAQ,SAERqB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACGwB,EADH,IACoBC,GAEpB3B,EAAAC,EAAAC,cAAA,SACG2B,MAAMH,EAAiBC,GACpB,GACED,EAAiBC,EAAkB,KAAKG,UAHhD,kUCvBN,IAAMC,EAAYxD,IAAOyD,KAAVC,IAKH,SAAAvD,GAAK,OAAIA,EAAMkD,WAIhB,SAAAlD,GAAK,OAAIA,EAAMwD,WAkBXC,EAVD,SAAAtC,GAAe,IAAZuC,EAAYvC,EAAZuC,MACf,OACEpC,EAAAC,EAAAC,cAAC6B,EAAD,CACEH,UAAWQ,GAAS,EAAI,gBAAkB,4BAC1CF,SAAUE,GAAS,EAAI,MAAQ,IAE9BA,82BCtBP,IAAMC,EAAOC,YAAHC,KAWJC,EAASjE,IAAOC,IAAViE,IAcGJ,GAiBAK,EAJC,WACd,OAAO1C,EAAAC,EAAAC,cAACsC,EAAD,gdCxCT,IAAMG,GAAepE,IAAOqE,OAAVC,IASN,SAAAnE,GAAK,OAAIA,EAAMO,WAAa,OAC7B,SAAAP,GAAK,OAAIA,EAAMK,UACJ,SAAAL,GAAK,OAAIA,EAAMC,SAAW,oBACrC,SAAAD,GAAK,OAAIA,EAAMwD,UAAY,UAQvBY,GADA,SAAAjD,GAAA,IAAMnB,EAANoB,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAAA,OAAkBG,EAAAC,EAAAC,cAACyC,GAAiBjE,8FCjBnD,IAAMqE,GAAMxE,IAAOgC,IAAVyC,MAwBMC,GApBO,SAAApD,GAAA,IACpBqD,EADoBrD,EACpBqD,aACAxF,EAFoBmC,EAEpBnC,KACAG,EAHoBgC,EAGpBhC,MACAsF,EAJoBtD,EAIpBsD,UACAC,EALoBvD,EAKpBuD,WALoB,OAOpBpD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACGuC,GACCpD,EAAAC,EAAAC,cAACc,EAAD,CAAKvB,UAAU,UACZyD,GAAgBlD,EAAAC,EAAAC,cAAA,uBACfgD,GAAgBlD,EAAAC,EAAAC,cAAA,kCAClBF,EAAAC,EAAAC,cAAA,kBAAUxC,EAAV,KACAsC,EAAAC,EAAAC,cAAC6C,GAAD,CAAK1B,IAAKxD,EAAOyD,IAAG,eAAA+B,OAAiB3F,KACrCsC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,GAAD,CAAQC,QAASJ,GAAjB,mQCrBR,IAAMK,GAAKjF,IAAOkF,MAAVC,MAWOC,GADG,SAAA9D,GAAA,IAAMnB,EAANoB,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAAA,OAAkBG,EAAAC,EAAAC,cAACsD,GAAO9E,utBCT5C,IAAMkF,GAAcrF,YAAOoF,GAAPpF,CAAHsF,KACF,SAAAnF,GAAK,OAChBA,EAAMoF,gBACNC,YADAC,KAEIC,KAEO,SAAAvF,GAAK,OAAIA,EAAMoF,gBAAkB,wBACvB,SAAApF,GAAK,OAAIA,EAAMoF,gBAAkB,UACzC,SAAApF,GAAK,OAAIA,EAAMoF,gBAAkB,UAC5B,SAAApF,GAAK,OAAIA,EAAMoF,gBAAkB,uBAGjDG,GAAQ3B,YAAH4B,MAwBIC,GADO,SAAAtE,GAAA,IAAMnB,EAANoB,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAAA,OAAkBG,EAAAC,EAAAC,cAAC0D,GAAgBlF,iGCjCzD,IAAM0F,GAAQ7F,IAAO8F,MAAVC,MA8BIC,GA3BI,SAAA1E,GAAA,IAAG2E,EAAH3E,EAAG2E,SAAUV,EAAbjE,EAAaiE,eAAgBW,EAA7B5E,EAA6B4E,UAAWC,EAAxC7E,EAAwC6E,SAAxC,OACjB1E,EAAAC,EAAAC,cAACc,EAAD,CACElC,WAAW,OACXK,SAAS,SACTC,WAAW,SACXK,UAAU,SACVR,UAAU,cAEVe,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACkE,GAAD,mBACApE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyE,GAAD,CACEb,eAAgBA,EAChBc,MAAOH,EACPC,SAAUA,IAEZ1E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,GAAD,CACEC,QAASiB,EACTK,SAAwB,KAAdJ,EACVxF,UAAU,cAHZ,uQCrBN,IAAM6F,GAAKvG,IAAOwG,GAAVC,MAKFC,GAAI1G,IAAOhB,EAAV2H,MAqFQC,GAjFE,SAAAtF,GAAA,IACfuF,EADevF,EACfuF,YACAC,EAFexF,EAEfwF,UACAC,EAHezF,EAGfyF,WACAC,EAJe1F,EAIf0F,SACAC,EALe3F,EAKf2F,YALe,OAOfxF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACc,EAAD,CACElC,WAAW,OACXK,SAAS,SACTC,WAAW,SACXF,WAAW,YACXG,SAAS,QACTJ,UAAU,sBACVL,aAAa,OACbC,eAAe,SACfF,QAAQ,sBAERqB,EAAAC,EAAAC,cAAA,iCAEAF,EAAAC,EAAAC,cAAA,0DAEAF,EAAAC,EAAAC,cAAC4E,GAAD,KACE9E,EAAAC,EAAAC,cAAA,mHAIAF,EAAAC,EAAAC,cAAA,4GAIAF,EAAAC,EAAAC,cAAA,uIAKAF,EAAAC,EAAAC,cAAA,6KAOFF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAC+E,GAAD,yKAKAjF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACoD,GAAD,CACEC,QAAS6B,EACTlD,SAAUoD,EAAa,QAAU,QACjC3G,QAAS2G,EAAa,QAAU,YAChCvG,SAAS,SAJX,UAQAiB,EAAAC,EAAAC,cAACoD,GAAD,CACEC,QAAS8B,EACTnD,SAAUqD,EAAW,QAAU,QAC/B5G,QAAS4G,EAAW,QAAU,YAC9BxG,SAAS,SAJX,SAUFiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,GAAD,CACEvE,SAAS,QACTwE,QAASiC,EACTX,UAAWU,IAAaD,GAH1B,YClESG,GAhBS,SAAA5F,GAAA,IACtB6F,EADsB7F,EACtB6F,SACAC,EAFsB9F,EAEtB8F,SACAC,EAHsB/F,EAGtB+F,QACAC,EAJsBhG,EAItBgG,SACAC,EALsBjG,EAKtBiG,SALsB,OAOtB9F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAAA,oBACWwF,EADX,IACsBC,EADtB,YACyCC,EADzC,QAGA5F,EAAAC,EAAAC,cAAA,oBACW2F,EADX,WAC6BC,EAD7B,WCJWC,GAPF,SAAAlG,GAAA,IAAGmG,EAAHnG,EAAGmG,UAAH,OACXhG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACGmF,EAAU9E,IAAI,SAAA+E,GAAI,OACjBjG,EAAAC,EAAAC,cAAA,KAAGkB,IAAK6E,EAAKC,KAAKxI,MAAlB,SAA+BuI,EAAKC,KAAKxI,KAAKyI,mBCgBrCC,GAlBG,SAAAvG,GAAA,IAAGwG,EAAHxG,EAAGwG,cAAeC,EAAlBzG,EAAkByG,MAAlB,OAChBtG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACGwF,GACCrG,EAAAC,EAAAC,cAACc,EAAD,CACErC,QAAQ,qBACRI,SAAS,QACTC,UAAU,QACVW,YAAY,UAEZK,EAAAC,EAAAC,cAAA,UACGoG,EAAMpF,IAAI,SAAA+E,GAAI,OACbjG,EAAAC,EAAAC,cAAA,MAAIkB,IAAK6E,EAAKM,KAAK7I,MAAOuI,EAAKM,KAAK7I,4OCVhD,IAAM8I,GAAOjI,YAAOkI,KAAPlI,CAAHmI,KAOK,SAAAhI,GAAK,OAAIA,EAAMiI,eAafC,GAVG,SAAA/G,GAA+B,IAA5B0D,EAA4B1D,EAA5B0D,QAASoD,EAAmB9G,EAAnB8G,aAC5B,OACE3G,EAAAC,EAAAC,cAACsG,GAAD,CACEjD,QAASA,EACToD,aAAcA,EACdE,KAAK,uBCLIC,GAXK,SAAAjH,GAAA,IAAGyG,EAAHzG,EAAGyG,MAAOS,EAAVlH,EAAUkH,aAAcV,EAAxBxG,EAAwBwG,cAAef,EAAvCzF,EAAuCyF,WAAvC,OAClBtF,EAAAC,EAAAC,cAAA,6BACoBoG,EAAMU,OACvB1B,GACCtF,EAAAC,EAAAC,cAAC+G,GAAD,CACE1D,QAASwD,EACTJ,aAAcN,EAAgB,iBAAmB,OCM1Ca,GAXD,SAAArH,GAAA,IAAGsH,EAAHtH,EAAGsH,MAAH,OACZnH,EAAAC,EAAAC,cAACc,EAAD,CAAK9B,WAAW,YACdc,EAAAC,EAAAC,cAAA,8BACCiH,EAAMjG,IAAI,SAAA+E,GAAI,OACbjG,EAAAC,EAAAC,cAAA,KAAGkB,IAAK6E,EAAKmB,KAAK1J,MACfuI,EAAKmB,KAAK1J,KAAKyI,cADlB,KACmCF,EAAKoB,iNCA9C,IAAMC,GAAW/I,YAAOqB,EAAPrB,CAAHgJ,MAwDCC,GAhDS,SAAA3H,GAAA,IACtB6F,EADsB7F,EACtB6F,SACAC,EAFsB9F,EAEtB8F,SACAC,EAHsB/F,EAGtB+F,QACAC,EAJsBhG,EAItBgG,SACAC,EALsBjG,EAKtBiG,SACAI,EANsBrG,EAMtBqG,KACAI,EAPsBzG,EAOtByG,MACAS,EARsBlH,EAQtBkH,aACAV,EATsBxG,EAStBwG,cACAf,EAVsBzF,EAUtByF,WACA6B,EAXsBtH,EAWtBsH,MAXsB,OAatBnH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAACc,EAAD,CACElC,WAAW,OACXK,SAAS,WACTN,eAAe,SACfI,UAAU,cAEVe,EAAAC,EAAAC,cAACoH,GAAD,KACEtH,EAAAC,EAAAC,cAACc,EAAD,CAAK9B,WAAW,YACdc,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACuH,GAAD,CACE/B,SAAUA,EACVC,SAAUA,EACVC,QAASA,EACTC,SAAUA,EACVC,SAAUA,IAEZ9F,EAAAC,EAAAC,cAACwH,GAAD,CAAM1B,UAAWE,IACjBlG,EAAAC,EAAAC,cAACyH,GAAD,CACErB,MAAOA,EACPS,aAAcA,EACdV,cAAeA,EACff,WAAYA,IAEdtF,EAAAC,EAAAC,cAAC0H,GAAD,CAAWvB,cAAeA,EAAeC,MAAOA,MAIpDtG,EAAAC,EAAAC,cAACoH,GAAD,CAAU9H,UAAU,SAClBQ,EAAAC,EAAAC,cAAC2H,GAAD,CAAOV,MAAOA,QCyKPW,OA1Nf,SAAAjI,GAA6B,IAATkI,EAASlI,EAATkI,MAASC,EACKC,mBAAS,IADdC,EAAApI,OAAAqI,EAAA,EAAArI,CAAAkI,EAAA,GACpBI,EADoBF,EAAA,GACVG,EADUH,EAAA,GAAAI,EAESL,oBAAS,GAFlBM,EAAAzI,OAAAqI,EAAA,EAAArI,CAAAwI,EAAA,GAEpBE,EAFoBD,EAAA,GAERE,EAFQF,EAAA,GAAAG,EAGaT,oBAAS,GAHtBU,EAAA7I,OAAAqI,EAAA,EAAArI,CAAA4I,EAAA,GAGpBE,EAHoBD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAIGb,oBAAS,GAJZc,EAAAjJ,OAAAqI,EAAA,EAAArI,CAAAgJ,EAAA,GAIpBE,EAJoBD,EAAA,GAIXE,EAJWF,EAAA,GAAAG,EAKHjB,mBAAS,CAAEkB,QAAQ,EAAOC,MAAM,IAL7BC,EAAAvJ,OAAAqI,EAAA,EAAArI,CAAAoJ,EAAA,GAKpBI,EALoBD,EAAA,GAKdE,EALcF,EAAA,GAAAG,EAMevB,oBAAS,GANxBwB,EAAA3J,OAAAqI,EAAA,EAAArI,CAAA0J,EAAA,GAMpBnD,EANoBoD,EAAA,GAMLC,EANKD,EAAA,GAAAE,EAOO1B,mBAAS,SAPhB2B,EAAA9J,OAAAqI,EAAA,EAAArI,CAAA6J,EAAA,GAOpBE,EAPoBD,EAAA,GAOTE,EAPSF,EAAA,GAAAG,EAQK9B,oBAAS,GARd+B,EAAAlK,OAAAqI,EAAA,EAAArI,CAAAiK,EAAA,GAQpBE,EARoBD,EAAA,GAQTE,EARSF,EAAA,GAAAG,EASDlC,mBAAS,IATRmC,EAAAtK,OAAAqI,EAAA,EAAArI,CAAAqK,EAAA,GASpB/H,EAToBgI,EAAA,GASbC,EATaD,EAAA,GAAAE,EAUDrC,mBAAS,CACjCvK,KAAM,GACNkI,QAAS,GACTE,SAAU,GACVH,SAAU,GACVD,SAAU,GACVQ,KAAM,GACNI,MAAO,GACPa,MAAO,GACPtJ,MAAO,KAnBkB0M,EAAAzK,OAAAqI,EAAA,EAAArI,CAAAwK,EAAA,GAUpBE,EAVoBD,EAAA,GAUbE,EAVaF,EAAA,GAAAG,EAqBCzC,mBAAS,CAAE0C,MAAO,GAAIC,IAAK,KArB5BC,EAAA/K,OAAAqI,EAAA,EAAArI,CAAA4K,EAAA,GAqBpBI,EArBoBD,EAAA,GAqBZE,EArBYF,EAAA,GAAAG,EAsBiB/C,mBAC1CgD,SAASC,aAAaC,QAAQ,QAAS,KAAO,GAvBrBC,GAAAtL,OAAAqI,EAAA,EAAArI,CAAAkL,EAAA,GAsBpBtJ,GAtBoB0J,GAAA,GAsBJC,GAtBID,GAAA,GAAAE,GAyBiBrD,mBAC1CgD,SAASC,aAAaC,QAAQ,WAAY,KAAO,GA1BxBI,GAAAzL,OAAAqI,EAAA,EAAArI,CAAAwL,GAAA,GAyBpB3J,GAzBoB4J,GAAA,GAyBJC,GAzBID,GAAA,GA6B3BE,oBAAU,WACRC,OAAOC,SAAS,EAAG,IAClB,CAAC9B,IACJ4B,oBAAU,WACR,GAAIxB,EAAW,CACb,IAAM2B,EAAWC,YAAY,WAC3BxB,EAAS,SAAAjI,GAAK,OAAIA,EAAQ,KACzB,KACG0J,EAAUC,WAAW,WACzB7B,GAAW,GACX8B,KAAMC,IAAI,YAAYC,KAAK,SAAAC,GACzB9B,EAAS,IACTI,EAAS3K,OAAAsM,EAAA,EAAAtM,CAAA,GACJ0K,EADG,CAEN9M,KAAMyO,EAAIE,KAAKC,WACfzO,MAAOsO,EAAIE,KAAKE,eAElBzC,EAAa,UAEbzB,EAAY,IACZmD,GAAkB,SAAA7J,GAAc,OAAIA,EAAiB,OAEtD,KACH,OAAO,WACL6K,aAAaV,GACbW,cAAcb,MAGjB,CAAC3B,IAEJwB,oBAAU,WACRP,aAAawB,QAAQ,OAAQhL,IAC7BwJ,aAAawB,QAAQ,UAAW/K,KAC/B,CAACD,GAAgBC,KAEpB8J,oBAAU,WAAM,IAEVkB,EADW5E,EAAM6E,OAAbC,GACQC,MAAM,EAAG,IACrBH,EAAO3F,OAAS,EAClB+D,EAAU,CACRJ,MAAOM,SAAS0B,EAAOG,MAAM,EAAG,IAChClC,IAAKK,SAAS0B,EAAOG,MAAM,EAAG,MAGhC/B,EAAU,CACRJ,MAAOM,SAAS0B,EAAOG,MAAM,EAAG,IAChClC,IAAKK,SAAS0B,EAAOG,MAAM,EAAG,OAGjC,CAAChC,EAAQ/C,EAAM6E,SAElB,IAAMG,GAAY,SAAAC,GAChB/D,GAAW,GACX+D,EAAEC,iBACFjB,KACGkB,KAAK,aAAc,CAClBC,WAAYrC,EAAOH,MACnByC,SAAUtC,EAAOF,MAElBsB,KAAK,SAAAC,GACJ,IAAIkB,EAAWlB,EAAIE,KACnB5B,EAAS3K,OAAAsM,EAAA,EAAAtM,CAAA,GACJ0K,EADG,CAEN7E,SAAU0H,EAASC,eACnB1H,QAASyH,EAASE,kBAClBzH,SAAUuH,EAASG,eACnB3H,SAAUwH,EAASI,eACnB/H,SAAU2H,EAASK,eACnBxH,KAAMmH,EAASM,WACfxG,MAAOkG,EAASO,YAChBtH,MAAO+G,EAASQ,eAElB/D,EAAa,YACbJ,GAAiB,GACjBb,GAAgB,GAChBqB,GAAW,GACXjB,GAAW,KAEZ6E,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAIlB,SAASvJ,GAASwI,GAChBA,EAAEC,iBACFjB,KACGkB,KAAK,gBAAiB,CACrBgB,MAAO9F,IAER8D,KAAK,SAAAC,GACJ,IAAIkB,EAAWlB,EAAIE,KACnBhE,EAAY,IACZ,IAAMwB,EAAYwD,EAASc,YAET,YAAdtE,GACFY,EAAS3K,OAAAsM,EAAA,EAAAtM,CAAA,GACJ0K,EADG,CAEN9M,KAAM2P,EAASf,WACfzO,MAAOwP,EAASd,eAElBzC,EAAa,UACbI,GAAW,GACXG,EAAS,IACTxB,GAAgB,GAChBwC,GAAkB,SAAA3J,GAAc,OAAIA,EAAiB,IACrD8J,GAAkB,SAAA7J,GAAc,OAAIA,EAAiB,KAC9B,cAAdkI,IACTpB,GAAc,GACdsD,WAAW,WACTtD,GAAc,IACb,QAGNqF,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAGlB,SAAS3I,GAAY4H,GACnBA,EAAEC,iBACF1D,EAAQ,CAAEJ,QAAQ,EAAMC,MAAM,IAGhC,SAAS/D,GAAU2H,GACjBA,EAAEC,iBACF1D,EAAQ,CAAEJ,QAAQ,EAAOC,MAAM,IAuDjC,OACEpJ,EAAAC,EAAAC,cAAA,aACoB,UAAd2J,IArDN7J,EAAAC,EAAAC,cAACkO,GAAD,CACEhJ,YAAaA,GACbC,UAAWA,GACXC,WAAYgE,EAAKH,OACjB5D,SAAU+D,EAAKF,KACf5D,YAAauH,OAiDK,aAAdlD,IA5CN7J,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAACmO,GAAD,CACE3I,SAAU8E,EAAM9E,SAChBC,SAAU6E,EAAM7E,SAChBC,QAAS4E,EAAM5E,QACfC,SAAU2E,EAAM3E,SAChBC,SAAU0E,EAAM1E,SAChBI,KAAMsE,EAAMtE,KACZI,MAAOkE,EAAMlE,MACbS,aAAc,kBAAM2C,GAAkBrD,IACtCA,cAAeA,EACff,WAAYgE,EAAKH,OACjBhC,MAAOqD,EAAMrD,QAGfnH,EAAAC,EAAAC,cAACoO,GAAD,CACE9J,SAAUA,GACVV,eAAgB0E,EAChB/D,UAAW2D,EACX1D,SAAU,SAAAsI,GAAC,OAAI3E,EAAY2E,EAAEuB,OAAO3J,MAAMuB,kBAG5CnG,EAAAC,EAAAC,cAACsO,EAAD,CAAOpM,MAAOA,IAEdpC,EAAAC,EAAAC,cAACuO,EAAD,CACE/M,eAAgBA,GAChBC,eAAgBA,QAmBA,WAAdkI,IAbN7J,EAAAC,EAAAC,cAACwO,GAAD,CACEtL,aAA6B,WAAdyG,GACf3G,aAAc0F,EACdlL,KAAM8M,EAAM9M,KACZG,MAAO2M,EAAM3M,MACbsF,UAAW4J,KASV/D,GAAWhJ,EAAAC,EAAAC,cAACyO,EAAD,mVCtNlBC,KAAQC,IAAIC,MAEZ,IAAMC,GAAUC,YAAHC,MAWPC,GAAM3Q,IAAO4Q,IAAVC,MAyBMC,OApBf,WACE,OACErP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACEb,EAAAC,EAAAC,cAAC6O,GAAD,MACA/O,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAM7R,GAAI,KACRuC,EAAAC,EAAAC,cAACgP,GAAD,CAAKK,QAAQ,aACXvP,EAAAC,EAAAC,cAAA,QACEsP,KAAK,UACLC,EAAE,kDAIRzP,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWjP,IACnCZ,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,OAAQC,UAAW/H,QC7B9C,IAAMgI,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOlQ,EAAAC,EAAAC,cAThB,WACE,OACEF,EAAAC,EAAAC,cAACoP,EAAA,EAAD,KACEtP,EAAAC,EAAAC,cAACiQ,GAAD,QAMU,MAASL","file":"static/js/main.c63ac6ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ditto.188b29ee.png\";","module.exports = __webpack_public_path__ + \"static/media/tyranitar.26580df9.png\";","module.exports = __webpack_public_path__ + \"static/media/registeel.06d307c3.png\";","module.exports = __webpack_public_path__ + \"static/media/magmortar.ae193ddb.png\";","module.exports = __webpack_public_path__ + \"static/media/thundurus.47815c40.png\";","module.exports = __webpack_public_path__ + \"static/media/sylveon.92c98a91.png\";","module.exports = __webpack_public_path__ + \"static/media/blacephalon.e529a948.png\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.6f49fa9e.png\";","import ditto from \"../img/ditto.png\";\r\nimport tyranitar from \"../img/tyranitar.png\";\r\nimport registeel from \"../img/registeel.png\";\r\nimport magmortar from \"../img/magmortar.png\";\r\nimport thundurus from \"../img/thundurus.png\";\r\nimport sylveon from \"../img/sylveon.png\";\r\nimport blacephalon from \"../img/blacephalon.png\";\r\nimport pikachu from \"../img/pikachu.png\";\r\n\r\nexport const GenLinks = [\r\n  {\r\n    to: \"/gen1_1-151\",\r\n    name: \"Gen 1\",\r\n    game: \"(Red/Blue/Yellow)\",\r\n    title: \"Kanto\",\r\n    image: ditto\r\n  },\r\n  {\r\n    to: \"/gen2_152-251\",\r\n    name: \"Gen 2\",\r\n    game: \"(Gold/Silver/Crystal)\",\r\n    title: \"Johto\",\r\n    image: tyranitar\r\n  },\r\n  {\r\n    to: \"/gen3_252-386\",\r\n    name: \"Gen 3\",\r\n    game: \"(Ruby/Sapphire/Emerald)\",\r\n    title: \"Hoenn\",\r\n    image: registeel\r\n  },\r\n  {\r\n    to: \"/gen4_387-493\",\r\n    name: \"Gen 4\",\r\n    game: \"(Diamond/Pearl)\",\r\n    title: \"Sinnoh\",\r\n    image: magmortar\r\n  },\r\n  {\r\n    to: \"/gen5_494-649\",\r\n    name: \"Gen 5\",\r\n    game: \"(Black/White)\",\r\n    title: \"Unova\",\r\n    image: thundurus\r\n  },\r\n  {\r\n    to: \"/gen6_650-721\",\r\n    name: \"Gen 6\",\r\n    game: \"(X/Y)\",\r\n    title: \"Kalos\",\r\n    image: sylveon\r\n  },\r\n  {\r\n    to: \"/gen7_722-807\",\r\n    name: \"Gen 7\",\r\n    game: \"(Sun/Moon)\",\r\n    title: \"Alola\",\r\n    image: blacephalon\r\n  },\r\n  {\r\n    to: \"/gen*_1-807\",\r\n    name: \"All Generations & Games\",\r\n    title: \"Every\",\r\n    image: pikachu\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DIV = styled.div`\r\n  background-color: ${props => props.bgColor};\r\n  border-radius: ${props => props.borderRadius};\r\n  justify-content: ${props => props.justifyContent};\r\n  display: ${props => props.setDisplay};\r\n  width: ${props => props.setWidth};\r\n  height: ${props => props.setHeight};\r\n  margin: ${props => props.setMargin};\r\n  padding: ${props => props.setPadding};\r\n  flex-flow: ${props => props.flexFlow};\r\n  align-items: ${props => props.alignItems};\r\n  max-width: ${props => props.maxWidth};\r\n  min-width: ${props => props.minWidth};\r\n  min-height: ${props => props.minHeight};\r\n  max-height: ${props => props.maxHeight};\r\n  text-align: ${props => props.textAlign};\r\n  line-height: ${props => props.lineHeight};\r\n  overflow: ${props => props.setOverflow};\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Box = ({ ...props }) => <DIV {...props} />;\r\nexport default Box;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GenLinks } from \"../Components/GenLinks\";\r\nimport Box from \"../Components/Box\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 300px;\r\n  height: 300px;\r\n  border: 1px solid rgb(134, 118, 118);\r\n  background-color: rgb(245, 238, 238);\r\n  margin: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  color: black;\r\n  line-height: 14px;\r\n  :hover {\r\n    box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\r\n      0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\r\n    cursor: pointer;\r\n    color: rgb(54, 134, 161);\r\n  }\r\n  > p {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst PokeIMG = styled.img`\r\n  width: 150px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>A Fun Pokemon Guessing Game</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Guess who the Pokemon is based on their stats, types, moves, and other traits.\"\r\n        />\r\n      </Helmet>\r\n\r\n      <Box setDisplay=\"flex\" flexFlow=\"column\" alignItems=\"center\">\r\n        <Box\r\n          bgColor=\"rgb(241, 238, 238)\"\r\n          borderRadius=\"10px\"\r\n          maxWidth=\"700px\"\r\n          setPadding=\"24px\"\r\n        >\r\n          <H1>\r\n            Welome to <i>Who's this Pokemon</i>, the Game!\r\n          </H1>\r\n          <p>\r\n            Inspired by the commercial break guessing game in the Pokemon anime\r\n            series (see{\" \"}\r\n            <a href=\"https://www.youtube.com/watch?v=gOLXYAlC-R8\">here</a>),\r\n            this is also a Pokemon guessing game. But instead of seeing visuals,\r\n            this game provides characteristics and moves of a random, mystery\r\n            pokemon that you must guess before time runs out. Click on any of\r\n            the boxes below to get started!\r\n          </p>\r\n        </Box>\r\n      </Box>\r\n      <Box setDisplay=\"flex\" flexFlow=\"row wrap\" justifyContent=\"center\">\r\n        {GenLinks.map(link => (\r\n          <StyledLink key={link.name} to={link.to}>\r\n            <p>{link.name}</p>\r\n            <p>{link.game}</p>\r\n            <p>{link.title} Region</p>\r\n            <PokeIMG src={link.image} alt=\"\" />\r\n          </StyledLink>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Box from \"./Box\";\r\n\r\nconst BoxRecord = styled(Box)`\r\n  @media screen and (max-width: 900px) {\r\n    justify-content: center;\r\n    margin-top: 50px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst RecordBox = ({ correctAnswers, totalQuestions }) => (\r\n  <BoxRecord setDisplay=\"flex\">\r\n    <Box\r\n      setWidth=\"100px\"\r\n      textAlign=\"center\"\r\n      lineHeight=\"10px\"\r\n      setBorder=\"1px solid lightslategray\"\r\n      setPadding=\"0 10px 10px 10px\"\r\n      bgColor=\"white\"\r\n    >\r\n      <p>Record:</p>\r\n      <p>\r\n        {correctAnswers}/{totalQuestions}\r\n      </p>\r\n      <p>\r\n        {isNaN(correctAnswers / totalQuestions)\r\n          ? 0\r\n          : ((correctAnswers / totalQuestions) * 100).toFixed()}\r\n        %\r\n      </p>\r\n    </Box>\r\n  </BoxRecord>\r\n);\r\nexport default RecordBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimerSpan = styled.span`\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 30px;\r\n  font-size: 32px;\r\n  border: ${props => props.setBorder};\r\n  padding: 10px;\r\n  width: 35px;\r\n  text-align: center;\r\n  color: ${props => props.txtColor};\r\n\r\n  @media screen and (max-width: 500px) {\r\n    right: 10px;\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nconst Timer = ({ count }) => {\r\n  return (\r\n    <TimerSpan\r\n      setBorder={count <= 5 ? \"2px solid red\" : \"2px solid rgb(37, 37, 37)\"}\r\n      txtColor={count <= 5 ? \"red\" : \"\"}\r\n    >\r\n      {count}\r\n    </TimerSpan>\r\n  );\r\n};\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Spin = keyframes`\r\n 0% {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  font-size: 10px;\r\n  position: fixed;\r\n  margin-top: -50px;\r\n  margin-left: -55px;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: 99;\r\n  text-indent: -9999em;\r\n  border-top: 1.1em solid rgba(14, 14, 14, 0.2);\r\n  border-right: 1.1em solid rgba(14, 14, 14, 0.2);\r\n  border-bottom: 1.1em solid rgba(14, 14, 14, 0.2);\r\n  border-left: 1.1em solid #0e0e0e;\r\n  transform: translateZ(0);\r\n  animation: ${Spin} 1.1s infinite linear;\r\n  /*  */\r\n  border-radius: 50%;\r\n  width: 100px;\r\n  height: 100px;\r\n\r\n  :after {\r\n    border-radius: 50%;\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nconst Spinner = () => {\r\n  return <Loader />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyles = styled.button`\r\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n  padding: 10px;\r\n  border: none;\r\n  text-decoration: none;\r\n  font-size: 26px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  margin: ${props => props.setMargin || \"5px\"};\r\n  width: ${props => props.setWidth};\r\n  background-color: ${props => props.bgColor || \"rgb(134, 62, 96)\"};\r\n  color: ${props => props.txtColor || \"white\"};\r\n  :disabled {\r\n    opacity: 0.4;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Button = ({ ...props }) => <ButtonStyles {...props} />;\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Box from \"./Box\";\r\nimport Button from \"./Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IMG = styled.img`\r\n  width: 300px;\r\n`;\r\n\r\nconst DisplayAnswer = ({\r\n  answerResult,\r\n  name,\r\n  image,\r\n  onRestart,\r\n  showAnswer\r\n}) => (\r\n  <>\r\n    {showAnswer && (\r\n      <Box textAlign=\"center\">\r\n        {answerResult && <h1>Correct!</h1>}\r\n        {!answerResult && <h1>You ran out of time!</h1>}\r\n        <h2>It's {name}!</h2>\r\n        <IMG src={image} alt={`The Pokemon ${name}`} />\r\n        <br />\r\n        <Button onClick={onRestart}>Next Question</Button>\r\n      </Box>\r\n    )}\r\n  </>\r\n);\r\nexport default DisplayAnswer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OO = styled.input`\r\n  border-radius: 10px;\r\n  text-decoration: none;\r\n  border: 1px solid lightgray;\r\n  height: 30px;\r\n  width: 250px;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst TextInput = ({ ...props }) => <OO {...props} />;\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nconst AnswerInput = styled(TextInput)`\r\n  animation: ${props =>\r\n    props.startAnimation &&\r\n    css`\r\n      ${shake} 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both\r\n    `};\r\n  transform: ${props => props.startAnimation && \"translate3d(0, 0, 0)\"};\r\n  backface-visibility: ${props => props.startAnimation && \"hidden\"};\r\n  perspective: ${props => props.startAnimation && \"1000px\"};\r\n  background-color: ${props => props.startAnimation && \"rgb(248, 101, 101)\"};\r\n`;\r\n\r\nconst shake = keyframes`\r\n     10%,\r\n     90% {\r\n       transform: translate3d(-1px, 0, 0);\r\n     }\r\n   \r\n     20%,\r\n     80% {\r\n       transform: translate3d(2px, 0, 0);\r\n     }\r\n   \r\n     30%,\r\n     50%,\r\n     70% {\r\n       transform: translate3d(-4px, 0, 0);\r\n     }\r\n   \r\n     40%,\r\n     60% {\r\n       transform: translate3d(4px, 0, 0);\r\n     }\r\n   `;\r\n\r\nconst AnswerTextBox = ({ ...props }) => <AnswerInput {...props} />;\r\nexport default AnswerTextBox;\r\n","import React from \"react\";\r\nimport AnswerTextBox from \"./AnswerTextBox\";\r\nimport Button from \"./Button\";\r\nimport styled from \"styled-components\";\r\nimport Box from \"./Box\";\r\n\r\nconst Label = styled.label`\r\n  font-size: 24px;\r\n`;\r\nconst AnswerForm = ({ onSubmit, startAnimation, answerVal, onChange }) => (\r\n  <Box\r\n    setDisplay=\"flex\"\r\n    flexFlow=\"column\"\r\n    alignItems=\"center\"\r\n    textAlign=\"center\"\r\n    setMargin=\"20px 0 0 0\"\r\n  >\r\n    <form>\r\n      <Label>Who is it?</Label>\r\n      <br />\r\n      <AnswerTextBox\r\n        startAnimation={startAnimation}\r\n        value={answerVal}\r\n        onChange={onChange}\r\n      />\r\n      <br />\r\n      <Button\r\n        onClick={onSubmit}\r\n        disabled={answerVal === \"\"}\r\n        setMargin=\"15px 0 0 0\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  </Box>\r\n);\r\nexport default AnswerForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nimport Box from \"./Box\";\r\n\r\nconst OL = styled.ol`\r\n  line-height: 26px;\r\n  max-width: 600px;\r\n  font-size: 18px;\r\n`;\r\nconst P = styled.p`\r\n  max-width: 600px;\r\n`;\r\n\r\nconst ModeForm = ({\r\n  normalClick,\r\n  hardClick,\r\n  normalMode,\r\n  hardMode,\r\n  onStartGame\r\n}) => (\r\n  <form>\r\n    <Box\r\n      setDisplay=\"flex\"\r\n      flexFlow=\"column\"\r\n      alignItems=\"center\"\r\n      setPadding=\"30px 20px\"\r\n      maxWidth=\"700px\"\r\n      setMargin=\"20px auto 50px auto\"\r\n      borderRadius=\"10px\"\r\n      justifyContent=\"center\"\r\n      bgColor=\"rgb(241, 238, 238)\"\r\n    >\r\n      <h1>Before you start...</h1>\r\n\r\n      <h2>There's a few minor details you should know:</h2>\r\n\r\n      <OL>\r\n        <li>\r\n          Answer input will automatically be transferred to all caps, so you do\r\n          not need to worry about casing.\r\n        </li>\r\n        <li>\r\n          However, apostrophes are needed for the Pokemon that have them in\r\n          their names. e.g. FARFETCH'D\r\n        </li>\r\n        <li>\r\n          Male/female specific pokemon are identified by using a space, and then\r\n          identifying the gender with M or F. e.g. NIDORAN M\r\n        </li>\r\n\r\n        <li>\r\n          Data is saved via local storage in your web browser. While most modern\r\n          browsers support this, if yours does not, your record/win percentage\r\n          will not be saved.\r\n        </li>\r\n      </OL>\r\n\r\n      <h2>Choose your difficulty level</h2>\r\n      <P>\r\n        Note: The only difference between the two modes is that on 'Normal'\r\n        mode, all learnable moves are shown. On 'Hard', only the total number of\r\n        moves is displayed.\r\n      </P>\r\n      <span>\r\n        <Button\r\n          onClick={normalClick}\r\n          txtColor={normalMode ? \"white\" : \"black\"}\r\n          bgColor={normalMode ? \"green\" : \"lightgray\"}\r\n          setWidth=\"125px\"\r\n        >\r\n          Normal\r\n        </Button>\r\n        <Button\r\n          onClick={hardClick}\r\n          txtColor={hardMode ? \"white\" : \"black\"}\r\n          bgColor={hardMode ? \"green\" : \"lightgray\"}\r\n          setWidth=\"125px\"\r\n        >\r\n          Hard\r\n        </Button>\r\n      </span>\r\n\r\n      <br />\r\n      <Button\r\n        setWidth=\"260px\"\r\n        onClick={onStartGame}\r\n        disabled={!hardMode && !normalMode}\r\n      >\r\n        Start\r\n      </Button>\r\n    </Box>\r\n  </form>\r\n);\r\n\r\nexport default ModeForm;\r\n","import React from \"react\";\r\n\r\nconst HeightAndWeight = ({\r\n  heightFt,\r\n  heightIn,\r\n  heightM,\r\n  weightLb,\r\n  weightKg\r\n}) => (\r\n  <>\r\n    <p>\r\n      Height: {heightFt}'{heightIn}\" (ft) | {heightM} (m)\r\n    </p>\r\n    <p>\r\n      Weight: {weightLb} (lb) | {weightKg} (kg)\r\n    </p>\r\n  </>\r\n);\r\nexport default HeightAndWeight;\r\n","import React from \"react\";\r\n\r\nconst Type = ({ typeArray }) => (\r\n  <>\r\n    {typeArray.map(item => (\r\n      <p key={item.type.name}>Type: {item.type.name.toUpperCase()}</p>\r\n    ))}\r\n  </>\r\n);\r\nexport default Type;\r\n","import React from \"react\";\r\nimport Box from \"./Box\";\r\n\r\nconst MovesList = ({ toggleMoveBox, moves }) => (\r\n  <>\r\n    {toggleMoveBox && (\r\n      <Box\r\n        bgColor=\"rgb(204, 239, 245)\"\r\n        setWidth=\"200px\"\r\n        setHeight=\"200px\"\r\n        setOverflow=\"scroll\"\r\n      >\r\n        <ul>\r\n          {moves.map(item => (\r\n            <li key={item.move.name}>{item.move.name}</li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    )}\r\n  </>\r\n);\r\nexport default MovesList;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  color: rgb(241, 97, 97);\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n  font-size: 24px;\r\n  position: relative;\r\n  top: 2px;\r\n  transform: ${props => props.settransform};\r\n`;\r\n\r\nconst ArrowIcon = ({ onClick, settransform }) => {\r\n  return (\r\n    <Icon\r\n      onClick={onClick}\r\n      settransform={settransform}\r\n      icon=\"arrow-circle-down\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ArrowIcon;\r\n","import React from \"react\";\r\nimport ArrowIcon from \"./ArrowIcon\";\r\n\r\nconst MovesHeader = ({ moves, onArrowClick, toggleMoveBox, normalMode }) => (\r\n  <p>\r\n    Learnable Moves: {moves.length}\r\n    {normalMode && (\r\n      <ArrowIcon\r\n        onClick={onArrowClick}\r\n        settransform={toggleMoveBox ? \"rotate(180deg)\" : \"\"}\r\n      />\r\n    )}\r\n  </p>\r\n);\r\nexport default MovesHeader;\r\n","import React from \"react\";\r\n\r\nimport Box from \"./Box\";\r\n\r\nconst Stats = ({ stats }) => (\r\n  <Box setPadding=\"5px 20px\">\r\n    <h3>Base Stat Values</h3>\r\n    {stats.map(item => (\r\n      <p key={item.stat.name}>\r\n        {item.stat.name.toUpperCase()}: {item.base_stat}\r\n      </p>\r\n    ))}\r\n  </Box>\r\n);\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeightAndWeight from \"./HeightAndWeight\";\r\nimport Type from \"./Type\";\r\nimport MovesList from \"./MovesList\";\r\nimport MovesHeader from \"./MovesHeader\";\r\nimport Box from \"./Box\";\r\nimport Stats from \"./Stats\";\r\n\r\nconst DataCard = styled(Box)`\r\n  margin: 10px;\r\n  width: 250px;\r\n  background-color: rgb(241, 238, 238);\r\n  border-radius: 10px;\r\n  min-height: 310px;\r\n`;\r\n\r\nconst Characteristics = ({\r\n  heightFt,\r\n  heightIn,\r\n  heightM,\r\n  weightLb,\r\n  weightKg,\r\n  type,\r\n  moves,\r\n  onArrowClick,\r\n  toggleMoveBox,\r\n  normalMode,\r\n  stats\r\n}) => (\r\n  <>\r\n    <Box\r\n      setDisplay=\"flex\"\r\n      flexFlow=\"row wrap\"\r\n      justifyContent=\"center\"\r\n      setMargin=\"20px 0 0 0\"\r\n    >\r\n      <DataCard>\r\n        <Box setPadding=\"5px 20px\">\r\n          <h3>Characteristics</h3>\r\n          <HeightAndWeight\r\n            heightFt={heightFt}\r\n            heightIn={heightIn}\r\n            heightM={heightM}\r\n            weightLb={weightLb}\r\n            weightKg={weightKg}\r\n          />\r\n          <Type typeArray={type} />\r\n          <MovesHeader\r\n            moves={moves}\r\n            onArrowClick={onArrowClick}\r\n            toggleMoveBox={toggleMoveBox}\r\n            normalMode={normalMode}\r\n          />\r\n          <MovesList toggleMoveBox={toggleMoveBox} moves={moves} />\r\n        </Box>\r\n      </DataCard>\r\n\r\n      <DataCard maxHeight=\"310px\">\r\n        <Stats stats={stats} />\r\n      </DataCard>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Characteristics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport RecordBox from \"../Components/RecordBox\";\r\nimport Timer from \"../Components/Timer\";\r\nimport Spinner from \"../Components/Spinner\";\r\nimport DisplayAnswer from \"../Components/DisplayAnswer\";\r\nimport AnswerForm from \"../Components/AnswerForm\";\r\nimport axios from \"axios\";\r\nimport ModeForm from \"../Components/ModeForm\";\r\nimport Characteristics from \"../Components/Characteristics\";\r\n\r\nfunction PokeView({ match }) {\r\n  const [formText, setFormText] = useState(\"\");\r\n  const [wrongInput, setWrongInput] = useState(false);\r\n  const [rightOrWrong, setRightOrWrong] = useState(false);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [mode, setMode] = useState({ normal: false, hard: false });\r\n  const [toggleMoveBox, setToggleMoveBox] = useState(false);\r\n  const [gameState, setGameState] = useState(\"intro\");\r\n  const [isTicking, setTicking] = useState(false);\r\n  const [count, setCount] = useState(30);\r\n  const [attrs, setAttrs] = useState({\r\n    name: \"\",\r\n    heightM: \"\",\r\n    weightKg: \"\",\r\n    heightIn: \"\",\r\n    heightFt: \"\",\r\n    type: [],\r\n    moves: [],\r\n    stats: [],\r\n    image: \"\"\r\n  });\r\n  const [pokeId, setPokeId] = useState({ start: \"\", end: \"\" });\r\n  const [correctAnswers, setCorrectAnswers] = useState(\r\n    parseInt(localStorage.getItem(\"item\"), 10) || 0\r\n  );\r\n  const [totalQuestions, setTotalQuestions] = useState(\r\n    parseInt(localStorage.getItem(\"itemTwo\"), 10) || 0\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [gameState]);\r\n  useEffect(() => {\r\n    if (isTicking) {\r\n      const interval = setInterval(() => {\r\n        setCount(count => count - 1);\r\n      }, 1000);\r\n      const timeout = setTimeout(() => {\r\n        setTicking(false);\r\n        axios.get(\"/timeout\").then(res => {\r\n          setCount(30);\r\n          setAttrs({\r\n            ...attrs,\r\n            name: res.data.serverName,\r\n            image: res.data.serverImage\r\n          });\r\n          setGameState(\"answer\");\r\n\r\n          setFormText(\"\");\r\n          setTotalQuestions(totalQuestions => totalQuestions + 1);\r\n        });\r\n      }, 30000);\r\n      return () => {\r\n        clearTimeout(timeout);\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [isTicking]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"item\", correctAnswers);\r\n    localStorage.setItem(\"itemTwo\", totalQuestions);\r\n  }, [correctAnswers, totalQuestions]);\r\n\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n    let modify = id.slice(5, 12);\r\n    if (modify.length < 6) {\r\n      setPokeId({\r\n        start: parseInt(modify.slice(0, 1)),\r\n        end: parseInt(modify.slice(2, 5))\r\n      });\r\n    } else {\r\n      setPokeId({\r\n        start: parseInt(modify.slice(0, 3)),\r\n        end: parseInt(modify.slice(4, 7))\r\n      });\r\n    }\r\n  }, [pokeId, match.params]);\r\n\r\n  const startGame = e => {\r\n    setSpinner(true);\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/gamestart\", {\r\n        startingId: pokeId.start,\r\n        endingId: pokeId.end\r\n      })\r\n      .then(res => {\r\n        let response = res.data;\r\n        setAttrs({\r\n          ...attrs,\r\n          heightIn: response.serverInHeight,\r\n          heightM: response.serverMeterHeight,\r\n          weightKg: response.serverKgWeight,\r\n          weightLb: response.serverLbWeight,\r\n          heightFt: response.serverFtHeight,\r\n          type: response.serverType,\r\n          stats: response.serverStats,\r\n          moves: response.serverMoves\r\n        });\r\n        setGameState(\"question\");\r\n        setToggleMoveBox(false);\r\n        setRightOrWrong(false);\r\n        setTicking(true);\r\n        setSpinner(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/answersubmit\", {\r\n        guess: formText\r\n      })\r\n      .then(res => {\r\n        let response = res.data;\r\n        setFormText(\"\");\r\n        const gameState = response.serverState;\r\n\r\n        if (gameState === \"Correct\") {\r\n          setAttrs({\r\n            ...attrs,\r\n            name: response.serverName,\r\n            image: response.serverImage\r\n          });\r\n          setGameState(\"answer\");\r\n          setTicking(false);\r\n          setCount(30);\r\n          setRightOrWrong(true);\r\n          setCorrectAnswers(correctAnswers => correctAnswers + 1);\r\n          setTotalQuestions(totalQuestions => totalQuestions + 1);\r\n        } else if (gameState === \"Incorrect\") {\r\n          setWrongInput(true);\r\n          setTimeout(() => {\r\n            setWrongInput(false);\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function normalClick(e) {\r\n    e.preventDefault();\r\n    setMode({ normal: true, hard: false });\r\n  }\r\n\r\n  function hardClick(e) {\r\n    e.preventDefault();\r\n    setMode({ normal: false, hard: true });\r\n  }\r\n\r\n  const displayDiffButtons = () => (\r\n    <ModeForm\r\n      normalClick={normalClick}\r\n      hardClick={hardClick}\r\n      normalMode={mode.normal}\r\n      hardMode={mode.hard}\r\n      onStartGame={startGame}\r\n    />\r\n  );\r\n\r\n  const displayGameValues = () => (\r\n    <>\r\n      <Characteristics\r\n        heightFt={attrs.heightFt}\r\n        heightIn={attrs.heightIn}\r\n        heightM={attrs.heightM}\r\n        weightLb={attrs.weightLb}\r\n        weightKg={attrs.weightKg}\r\n        type={attrs.type}\r\n        moves={attrs.moves}\r\n        onArrowClick={() => setToggleMoveBox(!toggleMoveBox)}\r\n        toggleMoveBox={toggleMoveBox}\r\n        normalMode={mode.normal}\r\n        stats={attrs.stats}\r\n      />\r\n\r\n      <AnswerForm\r\n        onSubmit={onSubmit}\r\n        startAnimation={wrongInput}\r\n        answerVal={formText}\r\n        onChange={e => setFormText(e.target.value.toUpperCase())}\r\n      />\r\n\r\n      <Timer count={count} />\r\n\r\n      <RecordBox\r\n        correctAnswers={correctAnswers}\r\n        totalQuestions={totalQuestions}\r\n      />\r\n    </>\r\n  );\r\n\r\n  const displayAnswer = () => (\r\n    <DisplayAnswer\r\n      showAnswer={!!(gameState === \"answer\")}\r\n      answerResult={rightOrWrong}\r\n      name={attrs.name}\r\n      image={attrs.image}\r\n      onRestart={startGame}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {!!(gameState === \"intro\") && displayDiffButtons()}\r\n      {!!(gameState === \"question\") && displayGameValues()}\r\n      {!!(gameState === \"answer\") && displayAnswer()}\r\n      {spinner && <Spinner />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokeView;\r\n","import { Route, Link } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport Home from \"./Home\";\r\nimport PokeView from \"./PokeView\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faArrowCircleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nlibrary.add(faArrowCircleDown);\r\n\r\nconst Globals = createGlobalStyle`\r\nfont-family: sans-serif;\r\nbody {\r\n  background-color: rgb(181, 188, 211);\r\n  margin: 2vw 5vw 3vw 5vw;\r\n}\r\np {\r\n  font-size: 18px;\r\n}\r\n`;\r\n\r\nconst SVG = styled.svg`\r\n  height: 50px;\r\n  width: 50px;\r\n`;\r\n\r\nfunction Root() {\r\n  return (\r\n    <>\r\n      <Globals />\r\n      <div>\r\n        <Link to={\"/\"}>\r\n          <SVG viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"#000000\"\r\n              d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\"\r\n            />\r\n          </SVG>\r\n        </Link>\r\n        <Route exact path={\"/\"} component={Home} />\r\n        <Route exact path={\"/:id\"} component={PokeView} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Router from \"./Views/Router\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Router />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}