{"version":3,"sources":["img/ditto.png","img/tyranitar.png","img/registeel.png","img/magmortar.png","img/thundurus.png","img/sylveon.png","img/blacephalon.png","img/pikachu.png","Components/GenLinks.js","Components/Box.js","Components/BoxShadow.js","Components/Home.js","Components/RecordBox.js","Components/Timer.js","Components/Spinner.js","Components/Button.js","Components/DisplayAnswer.js","Components/TextInput.js","Components/AnswerTextBox.js","Components/AnswerForm.js","Components/ModeForm.js","Components/HeightAndWeight.js","Components/Type.js","Components/MovesList.js","Components/ArrowIcon.js","Components/MovesHeader.js","Components/Stats.js","Components/Characteristics.js","Components/ScrollToTop.js","firebase.js","Components/PokeView.js","Router.js","index.js"],"names":["module","exports","__webpack_require__","p","GenLinks","to","name","game","title","image","ditto","tyranitar","registeel","magmortar","thundurus","sylveon","blacephalon","pikachu","Box","styled","div","_templateObject","props","bgColor","borderRadius","justifyContent","setDisplay","setWidth","setHeight","setMargin","setPadding","flexFlow","alignItems","maxWidth","minWidth","minHeight","maxHeight","textAlign","lineHeight","setOverflow","boxShadow","Home","react_default","a","createElement","Fragment","Helmet","content","Components_Box","as","H1","style","href","map","link","StyledLink","key","PokeIMG","src","alt","Link","Home_templateObject","img","_templateObject2","h1","_templateObject3","BoxRecord","RecordBox_templateObject","RecordBox","_ref","correctAnswers","totalQuestions","setBorder","isNaN","toFixed","TimerSpan","span","Timer_templateObject","txtColor","Timer","count","Spin","keyframes","Spinner_templateObject","Spinner","Spinner_templateObject2","Button","button","Button_templateObject","IMG","DisplayAnswer_templateObject","DisplayAnswer","answerResult","onRestart","loading","concat","Components_Button","disabled","onClick","TextInput","input","TextInput_templateObject","AnswerTextBox","AnswerTextBox_templateObject","startAnimation","css","AnswerTextBox_templateObject2","shake","AnswerTextBox_templateObject3","Label","label","AnswerForm_templateObject","AnswerForm","onSubmit","answerVal","onChange","Components_AnswerTextBox","value","OL","ol","ModeForm_templateObject","P","ModeForm_templateObject2","ModeForm","normalClick","hardClick","normalMode","hardMode","onStartGame","HeightAndWeight","heightFt","heightIn","heightM","weightLb","weightKg","Type","typeArray","item","type","toUpperCase","MovesList","toggleMoveBox","moves","move","Icon","FontAwesomeIcon","ArrowIcon_templateObject","settransform","ArrowIcon","icon","MovesHeader","onArrowClick","length","Components_ArrowIcon","Stats","stats","stat","base_stat","DataCard","Characteristics_templateObject","Characteristics","types","Components_HeightAndWeight","Components_Type","Components_MovesHeader","Components_MovesList","Components_Stats","ScrollToTop","_ref$someState","someState","useEffect","window","scrollTo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","PokeView","match","_useState","useState","loggedIn","UID","_useState2","Object","slicedToArray","auth","setAuth","_useState3","_useState4","formText","setFormText","_useState5","_useState6","wrongInput","setWrongInput","_useState7","_useState8","rightOrWrong","setRightOrWrong","_useState9","_useState10","spinner","setSpinner","_useState11","normal","hard","_useState12","mode","setMode","_useState13","_useState14","setToggleMoveBox","_useState15","_useState16","gameState","setGameState","_useState17","_useState18","isTicking","setTicking","_useState19","_useState20","setCount","_useState21","_useState22","attrs","setAttrs","_useState23","start","end","_useState24","pokeId","setPokeId","_useState25","parseInt","localStorage","getItem","_useState26","setCorrectAnswers","_useState27","_useState28","setTotalQuestions","onAuthStateChanged","user","uid","interval","setInterval","timeout","setTimeout","clearTimeout","clearInterval","setItem","modify","params","id","slice","queryData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","userID","fn","res","docID","cb","_cb$data","pokeData","wrap","_context","prev","next","currentUser","functions","httpsCallable","range","sent","data","backendResult","firestore","doc","get","t0","alert","stop","apply","this","arguments","onSubmission","_ref3","_callee2","e","_context2","preventDefault","signInAnonymously","_x","Components_ModeForm","Components_ScrollToTop","Components_Characteristics","Components_AnswerForm","target","Components_Timer","Components_RecordBox","Components_DisplayAnswer","Components_Spinner","library","add","faArrowCircleDown","Globals","createGlobalStyle","Router_templateObject","SVG","svg","Router_templateObject2","Root","react_router_dom","viewBox","fill","d","react_router","exact","path","component","rootElement","document","getElementById","ReactDOM","render","Router"],"mappings":"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","file":"static/js/main.2f1caec7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ditto.188b29ee.png\";","module.exports = __webpack_public_path__ + \"static/media/tyranitar.26580df9.png\";","module.exports = __webpack_public_path__ + \"static/media/registeel.06d307c3.png\";","module.exports = __webpack_public_path__ + \"static/media/magmortar.ae193ddb.png\";","module.exports = __webpack_public_path__ + \"static/media/thundurus.47815c40.png\";","module.exports = __webpack_public_path__ + \"static/media/sylveon.92c98a91.png\";","module.exports = __webpack_public_path__ + \"static/media/blacephalon.e529a948.png\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.6f49fa9e.png\";","import ditto from \"../img/ditto.png\";\r\nimport tyranitar from \"../img/tyranitar.png\";\r\nimport registeel from \"../img/registeel.png\";\r\nimport magmortar from \"../img/magmortar.png\";\r\nimport thundurus from \"../img/thundurus.png\";\r\nimport sylveon from \"../img/sylveon.png\";\r\nimport blacephalon from \"../img/blacephalon.png\";\r\nimport pikachu from \"../img/pikachu.png\";\r\n\r\nexport const GenLinks = [\r\n  {\r\n    to: \"/gen1_1-151\",\r\n    name: \"Gen 1\",\r\n    game: \"(Red/Blue/Yellow)\",\r\n    title: \"Kanto\",\r\n    image: ditto\r\n  },\r\n  {\r\n    to: \"/gen2_152-251\",\r\n    name: \"Gen 2\",\r\n    game: \"(Gold/Silver/Crystal)\",\r\n    title: \"Johto\",\r\n    image: tyranitar\r\n  },\r\n  {\r\n    to: \"/gen3_252-386\",\r\n    name: \"Gen 3\",\r\n    game: \"(Ruby/Sapphire/Emerald)\",\r\n    title: \"Hoenn\",\r\n    image: registeel\r\n  },\r\n  {\r\n    to: \"/gen4_387-493\",\r\n    name: \"Gen 4\",\r\n    game: \"(Diamond/Pearl)\",\r\n    title: \"Sinnoh\",\r\n    image: magmortar\r\n  },\r\n  {\r\n    to: \"/gen5_494-649\",\r\n    name: \"Gen 5\",\r\n    game: \"(Black/White)\",\r\n    title: \"Unova\",\r\n    image: thundurus\r\n  },\r\n  {\r\n    to: \"/gen6_650-721\",\r\n    name: \"Gen 6\",\r\n    game: \"(X/Y)\",\r\n    title: \"Kalos\",\r\n    image: sylveon\r\n  },\r\n  {\r\n    to: \"/gen7_722-807\",\r\n    name: \"Gen 7\",\r\n    game: \"(Sun/Moon)\",\r\n    title: \"Alola\",\r\n    image: blacephalon\r\n  },\r\n  {\r\n    to: \"/gen*_1-807\",\r\n    name: \"All Generations & Games\",\r\n    title: \"Every\",\r\n    image: pikachu\r\n  }\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nconst Box = styled.div`\r\n  background-color: ${props => props.bgColor};\r\n  border-radius: ${props => props.borderRadius};\r\n  justify-content: ${props => props.justifyContent};\r\n  display: ${props => props.setDisplay};\r\n  width: ${props => props.setWidth};\r\n  height: ${props => props.setHeight};\r\n  margin: ${props => props.setMargin};\r\n  padding: ${props => props.setPadding};\r\n  flex-flow: ${props => props.flexFlow};\r\n  align-items: ${props => props.alignItems};\r\n  max-width: ${props => props.maxWidth};\r\n  min-width: ${props => props.minWidth};\r\n  min-height: ${props => props.minHeight};\r\n  max-height: ${props => props.maxHeight};\r\n  text-align: ${props => props.textAlign};\r\n  line-height: ${props => props.lineHeight};\r\n  overflow: ${props => props.setOverflow};\r\n  box-shadow: ${props => props.boxShadow};\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default Box;\r\n","const boxShadow =\r\n  \"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)\";\r\nexport default boxShadow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GenLinks } from \"./GenLinks\";\r\nimport Box from \"./Box\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport boxShadow from \"./BoxShadow\";\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>A Fun Pokemon Guessing Game</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Guess who the Pokemon is based on their stats, types, moves, and other traits.\"\r\n        />\r\n      </Helmet>\r\n\r\n      <Box setDisplay=\"flex\" flexFlow=\"column\" alignItems=\"center\">\r\n        <Box\r\n          as=\"section\"\r\n          bgColor=\"rgb(241, 238, 238)\"\r\n          borderRadius=\"10px\"\r\n          maxWidth=\"700px\"\r\n          setPadding=\"15px 30px\"\r\n          boxShadow={boxShadow}\r\n        >\r\n          <H1>\r\n            Welome to <i>Who's this Pokemon</i>, the Game!\r\n          </H1>\r\n          <p style={{ lineHeight: 1.4 }}>\r\n            Inspired by the commercial break guessing game in the Pokemon anime\r\n            series (see{\" \"}\r\n            <a href=\"https://www.youtube.com/watch?v=gOLXYAlC-R8\">here</a>),\r\n            this is also a Pokemon guessing game. But instead of seeing visuals,\r\n            this game provides characteristics and moves of a random, mystery\r\n            pokemon that you must guess before time runs out. Click on any of\r\n            the boxes below to get started!\r\n          </p>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        setMargin=\"30px 0 0 0\"\r\n        setDisplay=\"flex\"\r\n        flexFlow=\"row wrap\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {GenLinks.map(link => (\r\n          <StyledLink key={link.name} to={link.to}>\r\n            <p>{link.name}</p>\r\n            <p>{link.game}</p>\r\n            <p>{link.title} Region</p>\r\n            <PokeIMG src={link.image} alt=\"\" />\r\n          </StyledLink>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\nconst StyledLink = styled(Link)`\r\n  width: 300px;\r\n  height: 300px;\r\n  border: 1px solid rgb(134, 118, 118);\r\n  background-color: rgb(245, 238, 238);\r\n  margin: 14px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  color: black;\r\n  line-height: 14px;\r\n  :hover {\r\n    box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\r\n      0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\r\n    cursor: pointer;\r\n    color: rgb(54, 134, 161);\r\n  }\r\n  > p {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst PokeIMG = styled.img`\r\n  width: 150px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  text-align: center;\r\n  margin: 0;\r\n  padding: 15px 0 10px 0;\r\n  font-size: 28px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Box from \"./Box\";\r\n\r\nconst BoxRecord = styled(Box)`\r\n  @media (max-width: 900px) {\r\n    justify-content: center;\r\n    margin-top: 50px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst RecordBox = ({ correctAnswers, totalQuestions }) => (\r\n  <BoxRecord setDisplay=\"flex\">\r\n    <Box\r\n      setWidth=\"100px\"\r\n      textAlign=\"center\"\r\n      lineHeight=\"10px\"\r\n      setBorder=\"1px solid lightslategray\"\r\n      setPadding=\"0 10px 10px 10px\"\r\n      bgColor=\"white\"\r\n    >\r\n      <p>Record:</p>\r\n      <p>\r\n        {correctAnswers}/{totalQuestions}\r\n      </p>\r\n      <p>\r\n        {isNaN(correctAnswers / totalQuestions)\r\n          ? 0\r\n          : ((correctAnswers / totalQuestions) * 100).toFixed()}\r\n        %\r\n      </p>\r\n    </Box>\r\n  </BoxRecord>\r\n);\r\nexport default RecordBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimerSpan = styled.span`\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 30px;\r\n  font-size: 32px;\r\n  border: ${props => props.setBorder};\r\n  padding: 10px;\r\n  width: 35px;\r\n  text-align: center;\r\n  color: ${props => props.txtColor};\r\n\r\n  @media screen and (max-width: 500px) {\r\n    right: 10px;\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nconst Timer = ({ count }) => {\r\n  return (\r\n    <TimerSpan\r\n      setBorder={count <= 5 ? \"2px solid red\" : \"2px solid rgb(37, 37, 37)\"}\r\n      txtColor={count <= 5 ? \"red\" : \"\"}\r\n    >\r\n      {count}\r\n    </TimerSpan>\r\n  );\r\n};\r\nexport default Timer;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst Spin = keyframes`\r\n 0% {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  font-size: 10px;\r\n  position: fixed;\r\n  margin-top: -50px;\r\n  margin-left: -55px;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: 99;\r\n  text-indent: -9999em;\r\n  border-top: 1.1em solid rgba(14, 14, 14, 0.2);\r\n  border-right: 1.1em solid rgba(14, 14, 14, 0.2);\r\n  border-bottom: 1.1em solid rgba(14, 14, 14, 0.2);\r\n  border-left: 1.1em solid #0e0e0e;\r\n  transform: translateZ(0);\r\n  animation: ${Spin} 1.1s infinite linear;\r\n  /*  */\r\n  border-radius: 50%;\r\n  width: 100px;\r\n  height: 100px;\r\n\r\n  :after {\r\n    border-radius: 50%;\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),\r\n    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\r\n  padding: 10px;\r\n  border: none;\r\n  text-decoration: none;\r\n  font-size: 26px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  margin: ${props => props.setMargin || \"5px\"};\r\n  width: ${props => props.setWidth};\r\n  background-color: ${props => props.bgColor || \"rgb(134, 62, 96)\"};\r\n  color: ${props => props.txtColor || \"white\"};\r\n  :disabled {\r\n    opacity: 0.4;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Box from \"./Box\";\r\nimport Button from \"./Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IMG = styled.img`\r\n  width: 300px;\r\n`;\r\n\r\nconst DisplayAnswer = ({ answerResult, name, image, onRestart, loading }) => (\r\n  <>\r\n    <Box textAlign=\"center\">\r\n      {answerResult ? <h1>Correct!</h1> : <h1>You ran out of time!</h1>}\r\n      <h2>It's {name}!</h2>\r\n      <IMG src={image} alt={`The Pokemon ${name}`} />\r\n      <br />\r\n      <Button disabled={loading} onClick={onRestart}>\r\n        Next Question\r\n      </Button>\r\n    </Box>\r\n  </>\r\n);\r\nexport default DisplayAnswer;\r\n","import styled from \"styled-components\";\r\nimport boxShadow from \"./BoxShadow\";\r\n\r\nconst TextInput = styled.input`\r\n  border-radius: 10px;\r\n  text-decoration: none;\r\n  border: none;\r\n  height: 30px;\r\n  text-align: center;\r\n  width: 250px;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  box-shadow: ${boxShadow};\r\n`;\r\n\r\nexport default TextInput;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nconst AnswerTextBox = styled(TextInput)`\r\n  animation: ${props =>\r\n    props.startAnimation &&\r\n    css`\r\n      ${shake} 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both\r\n    `};\r\n  transform: ${props => props.startAnimation && \"translate3d(0, 0, 0)\"};\r\n  backface-visibility: ${props => props.startAnimation && \"hidden\"};\r\n  perspective: ${props => props.startAnimation && \"1000px\"};\r\n  background-color: ${props => props.startAnimation && \"rgb(248, 101, 101)\"};\r\n`;\r\n\r\nconst shake = keyframes`\r\n     10%,\r\n     90% {\r\n       transform: translate3d(-1px, 0, 0);\r\n     }\r\n   \r\n     20%,\r\n     80% {\r\n       transform: translate3d(2px, 0, 0);\r\n     }\r\n   \r\n     30%,\r\n     50%,\r\n     70% {\r\n       transform: translate3d(-4px, 0, 0);\r\n     }\r\n   \r\n     40%,\r\n     60% {\r\n       transform: translate3d(4px, 0, 0);\r\n     }\r\n   `;\r\n\r\nexport default AnswerTextBox;\r\n","import React from \"react\";\r\nimport AnswerTextBox from \"./AnswerTextBox\";\r\nimport Button from \"./Button\";\r\nimport styled from \"styled-components\";\r\nimport Box from \"./Box\";\r\n\r\nconst Label = styled.label`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n  display: inline-block;\r\n`;\r\nconst AnswerForm = ({ onSubmit, startAnimation, answerVal, onChange }) => (\r\n  <Box\r\n    setDisplay=\"flex\"\r\n    flexFlow=\"column\"\r\n    alignItems=\"center\"\r\n    textAlign=\"center\"\r\n    setMargin=\"20px 0 0 0\"\r\n  >\r\n    <form>\r\n      <Label>Who is it?</Label>\r\n      <br />\r\n      <AnswerTextBox\r\n        startAnimation={startAnimation}\r\n        value={answerVal}\r\n        onChange={onChange}\r\n      />\r\n      <br />\r\n      <Button\r\n        onClick={onSubmit}\r\n        disabled={answerVal === \"\"}\r\n        setMargin=\"15px 0 0 0\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  </Box>\r\n);\r\nexport default AnswerForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nimport Box from \"./Box\";\r\nimport boxShadow from \"./BoxShadow\";\r\n\r\nconst OL = styled.ol`\r\n  line-height: 26px;\r\n  max-width: 600px;\r\n  font-size: 18px;\r\n`;\r\nconst P = styled.p`\r\n  max-width: 600px;\r\n`;\r\n\r\nconst ModeForm = ({\r\n  normalClick,\r\n  hardClick,\r\n  normalMode,\r\n  hardMode,\r\n  onStartGame,\r\n  loading\r\n}) => (\r\n  <form>\r\n    <Box\r\n      setDisplay=\"flex\"\r\n      flexFlow=\"column\"\r\n      alignItems=\"center\"\r\n      setPadding=\"30px 20px\"\r\n      maxWidth=\"700px\"\r\n      setMargin=\"20px auto 50px auto\"\r\n      borderRadius=\"10px\"\r\n      bgColor=\"rgb(241, 238, 238)\"\r\n      boxShadow={boxShadow}\r\n    >\r\n      <h1>Before you start...</h1>\r\n\r\n      <h2>There's a few minor details you should know:</h2>\r\n\r\n      <OL>\r\n        <li>\r\n          Answer input will automatically be transferred to all caps, so you do\r\n          not need to worry about casing.\r\n        </li>\r\n        <li>\r\n          However, apostrophes are needed for the Pokemon that have them in\r\n          their names. e.g. FARFETCH'D\r\n        </li>\r\n        <li>\r\n          Male/female specific pokemon are identified by using a space, and then\r\n          identifying the gender with M or F. e.g. NIDORAN M\r\n        </li>\r\n\r\n        <li>\r\n          Data is saved via local storage in your web browser. While most modern\r\n          browsers support this, if yours does not, your record/win percentage\r\n          will not be saved.\r\n        </li>\r\n      </OL>\r\n\r\n      <h2>Choose your difficulty level</h2>\r\n      <P>\r\n        Note: The only difference between the two modes is that on 'Normal'\r\n        mode, all learnable moves are shown. On 'Hard', only the total number of\r\n        moves is displayed.\r\n      </P>\r\n      <span>\r\n        <Button\r\n          disabled={loading}\r\n          onClick={normalClick}\r\n          txtColor={normalMode ? \"white\" : \"black\"}\r\n          bgColor={normalMode ? \"green\" : \"lightgray\"}\r\n          setWidth=\"125px\"\r\n        >\r\n          Normal\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          onClick={hardClick}\r\n          txtColor={hardMode ? \"white\" : \"black\"}\r\n          bgColor={hardMode ? \"green\" : \"lightgray\"}\r\n          setWidth=\"125px\"\r\n        >\r\n          Hard\r\n        </Button>\r\n      </span>\r\n\r\n      <br />\r\n      <Button\r\n        setWidth=\"260px\"\r\n        onClick={onStartGame}\r\n        disabled={(!hardMode && !normalMode) || loading}\r\n      >\r\n        Start\r\n      </Button>\r\n    </Box>\r\n  </form>\r\n);\r\n\r\nexport default ModeForm;\r\n","import React from \"react\";\r\n\r\nconst HeightAndWeight = ({\r\n  heightFt,\r\n  heightIn,\r\n  heightM,\r\n  weightLb,\r\n  weightKg\r\n}) => (\r\n  <>\r\n    <p>\r\n      Height: {heightFt}'{heightIn}\" (ft) | {heightM} (m)\r\n    </p>\r\n    <p>\r\n      Weight: {weightLb} (lb) | {weightKg} (kg)\r\n    </p>\r\n  </>\r\n);\r\nexport default HeightAndWeight;\r\n","import React from \"react\";\r\n\r\nconst Type = ({ typeArray }) => (\r\n  <>\r\n    {typeArray.map(item => (\r\n      <p key={item.type.name}>Type: {item.type.name.toUpperCase()}</p>\r\n    ))}\r\n  </>\r\n);\r\nexport default Type;\r\n","import React from \"react\";\r\nimport Box from \"./Box\";\r\n\r\nconst MovesList = ({ toggleMoveBox, moves }) => (\r\n  <>\r\n    {toggleMoveBox && (\r\n      <Box\r\n        bgColor=\"rgb(204, 239, 245)\"\r\n        setWidth=\"200px\"\r\n        setHeight=\"200px\"\r\n        setOverflow=\"scroll\"\r\n      >\r\n        <ul>\r\n          {moves.map(item => (\r\n            <li key={item.move.name}>{item.move.name}</li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    )}\r\n  </>\r\n);\r\nexport default MovesList;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  color: rgb(241, 97, 97);\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n  font-size: 24px;\r\n  position: relative;\r\n  top: 2px;\r\n  transform: ${props => props.settransform};\r\n`;\r\n\r\nconst ArrowIcon = ({ onClick, settransform }) => {\r\n  return (\r\n    <Icon\r\n      onClick={onClick}\r\n      settransform={settransform}\r\n      icon=\"arrow-circle-down\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ArrowIcon;\r\n","import React from \"react\";\r\nimport ArrowIcon from \"./ArrowIcon\";\r\n\r\nconst MovesHeader = ({ moves, onArrowClick, toggleMoveBox, normalMode }) => (\r\n  <p>\r\n    Learnable Moves: {moves.length}\r\n    {normalMode && (\r\n      <ArrowIcon\r\n        onClick={onArrowClick}\r\n        settransform={toggleMoveBox ? \"rotate(180deg)\" : \"\"}\r\n      />\r\n    )}\r\n  </p>\r\n);\r\nexport default MovesHeader;\r\n","import React from \"react\";\r\n\r\nconst Stats = ({ stats }) => (\r\n  <>\r\n    <h3>Base Stat Values</h3>\r\n    {stats.map(item => (\r\n      <p key={item.stat.name}>\r\n        {item.stat.name.toUpperCase()}: {item.base_stat}\r\n      </p>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeightAndWeight from \"./HeightAndWeight\";\r\nimport Type from \"./Type\";\r\nimport MovesList from \"./MovesList\";\r\nimport MovesHeader from \"./MovesHeader\";\r\nimport Box from \"./Box\";\r\nimport Stats from \"./Stats\";\r\nimport boxShadow from \"./BoxShadow\";\r\n\r\nconst DataCard = styled(Box)`\r\n  margin: 10px;\r\n  width: 250px;\r\n  background-color: rgb(241, 238, 238);\r\n  border-radius: 10px;\r\n  padding: 10px 25px;\r\n  box-shadow: ${boxShadow};\r\n`;\r\n\r\nconst Characteristics = ({\r\n  heightFt,\r\n  heightIn,\r\n  heightM,\r\n  weightLb,\r\n  weightKg,\r\n  types,\r\n  moves,\r\n  onArrowClick,\r\n  toggleMoveBox,\r\n  normalMode,\r\n  stats\r\n}) => (\r\n  <>\r\n    <Box\r\n      setDisplay=\"flex\"\r\n      flexFlow=\"row wrap\"\r\n      justifyContent=\"center\"\r\n      setMargin=\"20px 0 0 0\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <DataCard>\r\n        <h3>Characteristics</h3>\r\n        <HeightAndWeight\r\n          heightFt={heightFt}\r\n          heightIn={heightIn}\r\n          heightM={heightM}\r\n          weightLb={weightLb}\r\n          weightKg={weightKg}\r\n        />\r\n        <Type typeArray={types} />\r\n        <MovesHeader\r\n          moves={moves}\r\n          onArrowClick={onArrowClick}\r\n          toggleMoveBox={toggleMoveBox}\r\n          normalMode={normalMode}\r\n        />\r\n        <MovesList toggleMoveBox={toggleMoveBox} moves={moves} />\r\n      </DataCard>\r\n\r\n      <DataCard>\r\n        <Stats stats={stats} />\r\n      </DataCard>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Characteristics;\r\n","import { useEffect } from \"react\";\r\n\r\nconst ScrollToTop = ({ someState = \"\" }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [someState]);\r\n\r\n  return null;\r\n};\r\nexport default ScrollToTop;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/functions\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDK0sb4sxkNbOeT79LmRM2tRsyYOz5TQKc\",\r\n  authDomain: \"pokeguesser.firebaseapp.com\",\r\n  databaseURL: \"https://pokeguesser.firebaseio.com\",\r\n  projectId: \"pokeguesser\",\r\n  storageBucket: \"pokeguesser.appspot.com\",\r\n  messagingSenderId: \"1075048373944\",\r\n  appId: \"1:1075048373944:web:8ca62ed733f53589b75e4d\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport RecordBox from \"./RecordBox\";\r\nimport Timer from \"./Timer\";\r\nimport Spinner from \"./Spinner\";\r\nimport DisplayAnswer from \"./DisplayAnswer\";\r\nimport AnswerForm from \"./AnswerForm\";\r\n\r\nimport ModeForm from \"./ModeForm\";\r\nimport Characteristics from \"./Characteristics\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\nimport firebase from \"../firebase\";\r\n\r\nfunction PokeView({ match }) {\r\n  const [auth, setAuth] = useState({ loggedIn: false, UID: \"\" });\r\n  const [formText, setFormText] = useState(\"\");\r\n  const [wrongInput, setWrongInput] = useState(false);\r\n  const [rightOrWrong, setRightOrWrong] = useState(false);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [mode, setMode] = useState({ normal: false, hard: false });\r\n  const [toggleMoveBox, setToggleMoveBox] = useState(false);\r\n  const [gameState, setGameState] = useState(\"intro\");\r\n  const [isTicking, setTicking] = useState(false);\r\n  const [count, setCount] = useState(30);\r\n  const [attrs, setAttrs] = useState({});\r\n  const [pokeId, setPokeId] = useState({ start: \"\", end: \"\" });\r\n  const [correctAnswers, setCorrectAnswers] = useState(\r\n    parseInt(localStorage.getItem(\"item\"), 10) || 0\r\n  );\r\n  const [totalQuestions, setTotalQuestions] = useState(\r\n    parseInt(localStorage.getItem(\"itemTwo\"), 10) || 0\r\n  );\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      user\r\n        ? setAuth({ loggedIn: true, UID: user.uid })\r\n        : setAuth({ loggedIn: false, UID: \"\" });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isTicking) {\r\n      const interval = setInterval(() => {\r\n        setCount(count => count - 1);\r\n      }, 1000);\r\n      const timeout = setTimeout(() => {\r\n        setTicking(false);\r\n        setCount(30);\r\n        setGameState(\"answer\");\r\n        setFormText(\"\");\r\n        setTotalQuestions(totalQuestions => totalQuestions + 1);\r\n      }, 30000);\r\n      return () => {\r\n        clearTimeout(timeout);\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [isTicking]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"item\", correctAnswers);\r\n    localStorage.setItem(\"itemTwo\", totalQuestions);\r\n  }, [correctAnswers, totalQuestions]);\r\n\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n    let modify = id.slice(5, 12);\r\n    if (modify.length < 6) {\r\n      setPokeId({\r\n        start: parseInt(modify.slice(0, 1)),\r\n        end: parseInt(modify.slice(2, 5))\r\n      });\r\n    } else {\r\n      setPokeId({\r\n        start: parseInt(modify.slice(0, 3)),\r\n        end: parseInt(modify.slice(4, 7))\r\n      });\r\n    }\r\n  }, [pokeId, match.params]);\r\n\r\n  const queryData = async () => {\r\n    const user = firebase.auth().currentUser;\r\n    const userID = auth.loggedIn ? auth.UID : user.uid;\r\n    try {\r\n      const fn = firebase.functions().httpsCallable(\"pokemonQuery\");\r\n      const res = await fn({\r\n        range: {\r\n          start: pokeId.start,\r\n          end: pokeId.end\r\n        }\r\n      });\r\n      const docID = res.data.backendResult;\r\n      const cb = await firebase\r\n        .firestore()\r\n        .doc(`${userID}/${docID}`)\r\n        .get();\r\n      const { pokeData } = cb.data();\r\n      const {\r\n        name,\r\n        heightIn,\r\n        heightM,\r\n        weightKg,\r\n        weightLb,\r\n        heightFt,\r\n        image,\r\n        types,\r\n        moves,\r\n        stats\r\n      } = pokeData;\r\n      setAttrs({\r\n        heightM: heightM,\r\n        weightKg: weightKg,\r\n        weightLb: weightLb,\r\n        heightIn: heightIn,\r\n        heightFt: heightFt,\r\n        image: image,\r\n        name: name,\r\n        types: types,\r\n        moves: moves,\r\n        stats: stats\r\n      });\r\n      setGameState(\"question\");\r\n      setTicking(true);\r\n      setSpinner(false);\r\n      toggleMoveBox && setToggleMoveBox(false);\r\n      rightOrWrong && setRightOrWrong(false);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const onSubmission = async e => {\r\n    e.preventDefault();\r\n    setSpinner(true);\r\n    try {\r\n      if (!auth.loggedIn) {\r\n        await firebase.auth().signInAnonymously();\r\n        queryData();\r\n      } else queryData();\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (formText === attrs.name) {\r\n      setGameState(\"answer\");\r\n      setTicking(false);\r\n      setCount(30);\r\n      setRightOrWrong(true);\r\n      setCorrectAnswers(correctAnswers => correctAnswers + 1);\r\n      setTotalQuestions(totalQuestions => totalQuestions + 1);\r\n      setFormText(\"\");\r\n    } else {\r\n      setWrongInput(true);\r\n      setTimeout(() => {\r\n        setWrongInput(false);\r\n      }, 1000);\r\n    }\r\n  }\r\n  function normalClick(e) {\r\n    e.preventDefault();\r\n    setMode({ normal: true, hard: false });\r\n  }\r\n\r\n  function hardClick(e) {\r\n    e.preventDefault();\r\n    setMode({ normal: false, hard: true });\r\n  }\r\n\r\n  const displayDiffButtons = () => (\r\n    <ModeForm\r\n      loading={spinner}\r\n      normalClick={normalClick}\r\n      hardClick={hardClick}\r\n      normalMode={mode.normal}\r\n      hardMode={mode.hard}\r\n      onStartGame={onSubmission}\r\n    />\r\n  );\r\n\r\n  const displayGameValues = () => (\r\n    <>\r\n      <ScrollToTop someState={gameState} />\r\n      <Characteristics\r\n        heightFt={attrs.heightFt}\r\n        heightIn={attrs.heightIn}\r\n        heightM={attrs.heightM}\r\n        weightLb={attrs.weightLb}\r\n        weightKg={attrs.weightKg}\r\n        types={attrs.types}\r\n        moves={attrs.moves}\r\n        onArrowClick={() => setToggleMoveBox(!toggleMoveBox)}\r\n        toggleMoveBox={toggleMoveBox}\r\n        normalMode={mode.normal}\r\n        stats={attrs.stats}\r\n      />\r\n\r\n      <AnswerForm\r\n        onSubmit={onSubmit}\r\n        startAnimation={wrongInput}\r\n        answerVal={formText}\r\n        onChange={e => setFormText(e.target.value.toUpperCase())}\r\n      />\r\n\r\n      <Timer count={count} />\r\n\r\n      <RecordBox\r\n        correctAnswers={correctAnswers}\r\n        totalQuestions={totalQuestions}\r\n      />\r\n    </>\r\n  );\r\n\r\n  const displayAnswer = () => (\r\n    <DisplayAnswer\r\n      answerResult={rightOrWrong}\r\n      name={attrs.name}\r\n      image={attrs.image}\r\n      onRestart={onSubmission}\r\n      loading={spinner}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {gameState === \"intro\" && displayDiffButtons()}\r\n      {gameState === \"question\" && displayGameValues()}\r\n      {gameState === \"answer\" && displayAnswer()}\r\n      {spinner && <Spinner />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokeView;\r\n","import { Route, Link } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport Home from \"./Components/Home\";\r\nimport PokeView from \"./Components/PokeView\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faArrowCircleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nlibrary.add(faArrowCircleDown);\r\n\r\nconst Globals = createGlobalStyle`\r\nfont-family: sans-serif;\r\nbody {\r\n background-color: #ddeee6; \r\n /*background-image: url(\"https://images.pexels.com/photos/768943/pexels-photo-768943.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\");\r\n background-size: cover;\r\n background-attachment: fixed; */\r\n  margin: 2vw 1.5vw 3vw 1.5vw;\r\n}\r\np {\r\n  font-size: 18px;\r\n}\r\n`;\r\n\r\nconst SVG = styled.svg`\r\n  height: 50px;\r\n  width: 50px;\r\n`;\r\n\r\nfunction Root() {\r\n  return (\r\n    <>\r\n      <Globals />\r\n      <div>\r\n        <Link to=\"/\">\r\n          <SVG viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"#000000\"\r\n              d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\"\r\n            />\r\n          </SVG>\r\n        </Link>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/:id\" component={PokeView} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Router from \"./Router\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Router />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}